Section: About pyWordGen
Description: PyWordGen started life as a simple random name generator PHP script on <a href="http://middleearth.net">MiddleEarth.net</a>, re-incarnated as a set of perl scripts, then as a custom product for Zope, and now lives its life as a stand-alone python class.
Content: The true origins of the name generator (now PyWordGen) were in cryptography, or rather, the history of cryptography. Several years ago, we were playing with letter frequency analysis in different languages and at different historical times. (It was very interesting to see these trends over time...) We were wondering if character frequencies could indicate source language in old encryption styles (one-to-one mappings). 
<p>
The information we collected was inconclusive, but the perl scripts we wrote gave birth to another idea: a character name generator for games. Since then, we have used it not only to create names for people in games and on Web sites, but to assist in coming up with vocabulary while developing whole new languages.


Section: The Future
Content: We'd like to weave more linguistically oriented material into the code (we're open to suggestions). PyWordGen  has delusions of the linguistic sort: it wants to simulate phonological and morphological evolution. How far this goes is anyone's guess, but right now it works and is tons of fun to play with ;-)
Honestly, though, this started as a game and is currently used in games -- there are no genuine aspirations of academic accomplishment or the heady vapours of linguistic science.

Section: Example Usage
Content: The following is not meant to be something that you could test and run (although everything is taken from running code). It's sole purpose is to give a quick glance under the hood, this way you can tell if you want to go any further ;-)
<h3>Generate Statistics Files</h3>
<pre>
SOURCE  = "mux/combined.txt"
LIST    = "mux/combined_wordlist.txt"
STATS   = "mux/combined_stats.dict"

import LangGen

stats = LangGen.GenerateStats()
stats.source_filename = SOURCE
stats.list_filname = LIST
stats.stats_filename = STATS

stats.writeStatsFile()
</pre>
<h3>Create Random Words</h3>
<pre>
import LangGen

PARTS = 7
RANGE1 = 3
RANGE2 = 12

print "Mux: "
for i in range(RANGE2-RANGE1):
  mux = LangGen.CreateWord()
  mux.stats_filename = "mux/combined_stats.dict"
  mux.openPickledData()
  print mux.getWord(i + RANGE1)
print


jas = LangGen.CreateWord()
jas.stats_filename = "jas/combined_stats.dict"
jas.openPickledData()
print "Jas: " + jas.getWord(PARTS)

elani = LangGen.CreateWord() 
elani.stats_filename = "elani/combined_stats.dict"
elani.openPickledData() 
print "Elian: " + elani.getWord(PARTS)

rook = LangGen.CreateWord()
rook.stats_filename = "rookish/combined_stats.dict" 
rook.openPickledData()
print "Rookish: " + rook.getWord(PARTS)
</pre>
<h3>Display Output</h3>
Running that code produces the following:
<pre>
Mux: 
azie
kuzo
mekkes
manootry
rehroret
pherotimmoo
zosseurmalid
eeffilaqartees
gaberanglaazzlid

Jas: chtavawioj
Elian: ountekivie
Rookish: usenneffu
</pre>

